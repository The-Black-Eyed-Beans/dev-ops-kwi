{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploying base infrastructure for project.",
    "Parameters": {
        "EnvironmentType": {
            "Description": "The Environment type of the stack.",
            "Type": "String",
            "Default": "dev",
            "AllowedValues": ["dev", "test", "prod"],
            "ConstraintDescription": "Specify either dev, test, or prod."
        },
        "VPCCidr": {
            "Type": "String",
            "Description": "CIDR block for the VPC.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "Public1Cidr": {
            "Type": "String",
            "Description": "CIDR block for the first public subnets",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "Public2Cidr": {
            "Type": "String",
            "Description": "CIDR block for the second public subnets",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "Private1Cidr": {
            "Type": "String",
            "Description": "CIDR block for the first private subnet.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "Private2Cidr": {
            "Type": "String",
            "Description": "CIDR block for the second private subnet.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "AvailabilityZone1": {
            "Type": "String",
            "Description": "Availability zones for the subnets.",
            "Default": "eu-central-1a"
        },
        "AvailabilityZone2": {
            "Type": "String",
            "Description": "Availability zones for the subnets.",
            "Default": "eu-central-1b"
        },
        "Route53Domain": {
            "Type": "String",
            "Description": "Domain name used by Route53."
        }
    },

    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "VPCCidr" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-vpc" }
                    }
                ]
            }
        },
        
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-ig" }
                    }
                ]
            }
        },

        "VPCAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": { "Ref": "InternetGateway" },
                "VpcId": { "Ref": "VPC" }
            }
        },

        "MicroSecurity": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for Microservice ALB",
                "GroupName": { "Fn::Sub": "aline-kwi-${EnvironmentType}-microservice-sg" },
                "VpcId": { "Ref": "VPC" },

                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8070,
                        "ToPort": 8070,
                        "IpProtocol": "tcp"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8071,
                        "ToPort": 8071,
                        "IpProtocol": "tcp"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8072,
                        "ToPort": 8072,
                        "IpProtocol": "tcp"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8073,
                        "ToPort": 8073,
                        "IpProtocol": "tcp"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8083,
                        "ToPort": 8083,
                        "IpProtocol": "tcp"
                    }
                ],

                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "ToPort": 0,
                        "IpProtocol": "-1"
                    }
                ],

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-microservice-sg" }
                    }
                ]
            }
        },

        "GateSecurity": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for Gateway ALB",
                "GroupName": { "Fn::Sub": "aline-kwi-${EnvironmentType}-gateway-sg" },
                "VpcId": { "Ref": "VPC" },

                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "ToPort": 80,
                        "IpProtocol": "tcp"
                    }
                ],

                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "ToPort": 0,
                        "IpProtocol": "-1"
                    }
                ],

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-gateway-sg" }
                    }
                ]
            }
        },

        "ConnectSecurity": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for connecting the two ALBs",
                "GroupName": { "Fn::Sub": "aline-kwi-${EnvironmentType}-connect-sg" },
                "VpcId": { "Ref": "VPC" },

                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "ToPort": 0,
                        "IpProtocol": "-1"
                    }
                ],

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-connect-sg" }
                    }
                ]
            }
        },

        "SelfConnect": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": { "Ref": "ConnectSecurity" },
                "IpProtocol": "-1",
                "FromPort": 0,
                "ToPort": 0,
                "SourceSecurityGroupId": { "Ref": "ConnectSecurity" }
            }
        },

        "KubeSecurity": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for EKS Nodegroups",
                "GroupName": { "Fn::Sub": "aline-kwi-${EnvironmentType}-k8s-sg" },
                "VpcId": { "Ref": "VPC" },

                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 30000,
                        "ToPort": 30000,
                        "IpProtocol": "tcp"
                    }
                ],

                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "ToPort": 0,
                        "IpProtocol": "-1"
                    }
                ],

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-k8s-sg" }
                    }
                ]
            }
        },

        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone1" },
                "CidrBlock": { "Ref": "Public1Cidr" },
                "MapPublicIpOnLaunch": true,
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-public-1" }
                    },
                    {
                        "Key": "Tier",
                        "Value": "Public"
                    }
                ]
            }
        }, 

        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone2" },
                "CidrBlock": { "Ref": "Public2Cidr" },
                "MapPublicIpOnLaunch": true,
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-public-2" }
                    },
                    {
                        "Key": "Tier",
                        "Value": "Public"
                    }
                ]
            }
        }, 

        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone1" },
                "CidrBlock": { "Ref": "Private1Cidr" },
                "MapPublicIpOnLaunch": false,
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-private-1" }
                    },
                    {
                        "Key": "Tier",
                        "Value": "Private"
                    }
                ]
            }
        }, 

        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone2" },
                "CidrBlock": { "Ref": "Private2Cidr" },
                "MapPublicIpOnLaunch": false,
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-private-2" }
                    },
                    {
                        "Key": "Tier",
                        "Value": "Private"
                    }
                ]
            }
        },

        "EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-nat-eip" }
                    }
                ]
            }
        },

        "NATGateway": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"] },
                "SubnetId": { "Ref": "PublicSubnet1" },
                
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-nat-gateway" }
                    }
                ]
            }
        },

        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-public-RT" }
                    }
                ]
            }
        },

        "IGRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Sub": "aline-kwi-${EnvironmentType}-private-RT" }
                    }
                ]
            }
        },

        "NATRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NATGateway" }
            }
        },

        "Public1Assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId" : { "Ref" : "PublicSubnet1" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },

        "Public2Assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId" : { "Ref" : "PublicSubnet2" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },

        "Private1Assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId" : { "Ref" : "PrivateSubnet1" },
                "RouteTableId" : { "Ref" : "PrivateRouteTable" }
            }
        },

        "Private2Assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId" : { "Ref" : "PrivateSubnet2" },
                "RouteTableId" : { "Ref" : "PrivateRouteTable" }
            }
        },

        "MicroserviceALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": { "Fn::Sub": "aline-kwi-${EnvironmentType}-service-lb" },
                "Scheme": "internal",
                "Type": "application",
                "SecurityGroups": [
                    { "Ref": "MicroSecurity" },
                    { "Ref": "ConnectSecurity" }
                ],
                "Subnets": [
                    { "Ref": "PrivateSubnet1" },
                    { "Ref": "PrivateSubnet2" }
                ]
            }
        },

        "GatewayALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "DependsOn": "InternetGateway",
            "Properties": {
                "Name": { "Fn::Sub": "aline-kwi-${EnvironmentType}-gateway-lb" },
                "Scheme": "internet-facing",
                "Type": "application",
                "SecurityGroups": [
                    { "Ref": "GateSecurity" },
                    { "Ref": "ConnectSecurity" }
                ],
                "Subnets": [
                    { "Ref": "PublicSubnet1" },
                    { "Ref": "PublicSubnet2" }
                ]
            }
        },

        "APIRecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": { "Fn::Sub": "${Route53Domain}." },
                "Name": { "Fn::Sub": "api.${EnvironmentType}.keshaun.${Route53Domain}" },
                "Type": "CNAME",
                "TTL": "7200",
                "ResourceRecords": [
                    { "Fn::GetAtt": ["GatewayALB", "DNSName"] }
                ]
            }
        }
    },

    "Outputs": {
        "VPC": {
            "Description": "VPC for project.",
            "Value": { "Ref": "VPC" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-VpcId"}
            }
        },

        "AppLoadBalancerArn": {
            "Description": "ARN of the load balancer for the microservices.",
            "Value": { "Ref": "MicroserviceALB" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-AppLoadBalancerArn"}
            }
        },

        "AppLoadBalancerDns": {
            "Description": "DNS name of the load balancer for the microservices.",
            "Value": { "Fn::GetAtt": ["MicroserviceALB", "DNSName"] },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-AppLoadBalancerDns"}
            }
        },

        "GatewayLoadBalancerArn": {
            "Description": "ARN of the load balancer for the gateway.",
            "Value": { "Ref": "GatewayALB" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-GatewayLoadBalancerArn"}
            }
        },

        "GatewayLoadBalancerDns": {
            "Description": "DNS name of the load balancer for the gateway.",
            "Value": { "Fn::GetAtt": ["GatewayALB", "DNSName"] },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-GatewayLoadBalancerDns"}
            }
        },

        "PublicSubnet1": {
            "Description": "First public subnet of the VPC.",
            "Value": { "Ref": "PublicSubnet1" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet1Id"}
            }
        },

        "PublicSubnet2": {
            "Description": "Second public subnet of the VPC.",
            "Value": { "Ref": "PublicSubnet2" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet2Id"}
            }
        },

        "PrivateSubnet1": {
            "Description": "First private subnet of the VPC.",
            "Value": { "Ref": "PublicSubnet1" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet1Id"}
            }
        },

        "PrivateSubnet2": {
            "Description": "Second private subnet of the VPC.",
            "Value": { "Ref": "PublicSubnet2" },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet2Id"}
            }
        },

        "AppSecurityGroup": {
            "Description": "Security group for the microservices.",
            "Value": { "Fn::GetAtt": ["MicroSecurity", "GroupId"] },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-AppSecurityGroup"}
            }
        },

        "GatewaySecurityGroup": {
            "Description": "Security group for the gateway.",
            "Value": { "Fn::GetAtt": ["GateSecurity", "GroupId"] },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-GatewaySecurityGroup"}
            }
        },

        "KubernetesSecurityGroup": {
            "Description": "Security group for Kubernetes.",
            "Value": { "Fn::GetAtt": ["KubeSecurity", "GroupId"] },
            "Export": {
                "Name": { "Fn::Sub": "${AWS::StackName}-KubernetesSecurityGroup"}
            }
        }
    }
}